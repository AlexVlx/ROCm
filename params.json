{
  "name": "ROCm",
  "tagline": "ROCm - Radeon Open Compute Platform ",
  "body": "## Are You Ready to ROCK!\r\nThe ROCm Platform delivers on the vision of the  Boltzmann Initiative, bringing\r\nnew opportunities in GPU Computing Research.\r\n\r\nOn November 16th, 2015, the Radeon Technology Group rolled out Boltzmann\r\nInitiative with three core foundation elements:\r\n\r\n* New Linux(R) Driver and Runtime Stack optimized for HPC & Ultra-scale class\r\n  computing,\r\n* Heterogeneous C and C++ compiler which best address the whole system not just\r\n  a single device\r\n* HIP acknowledging the need for platform choice when utilizing GPU computing\r\n  API\r\n\r\nUsing our knowledge of the HSA Standards and, more importantly, the HSA 1.1\r\nRuntime we have been able to successfully extended support to the dGPU with\r\ncritical features for NUMA class acceleration. As a result, the ROCK driver is\r\ncomposed of several components based on our efforts to develop the\r\nHeterogeneous System Architecture for APUs, including the new AMDGPU driver,\r\nthe Kernel Fusion Driver (KFD), the HSA+ Runtime and an LLVM based compilation\r\nstack for the building of key language support. This support starts with AMDâ€™s\r\nFIJI Family of dGPU, but support is planned to expand to include future ASICS.\r\n\r\n### The Latest ROCm Platform - ROCm 1.1\r\nThe latest tested version of the drivers, tools, libraries and source code for\r\nthe ROCm platform have been released and are available under the roc-1.1.0 tag\r\nof the following GitHub repositories:\r\n\r\n* [ROCK-Kernel-Driver](https://github.com/RadeonOpenCompute/ROCK-Kernel-Driver/tree/roc-1.1.0)\r\n* [ROCR-Runtime](https://github.com/RadeonOpenCompute/ROCR-Runtime/tree/roc-1.1.0)\r\n* [ROCT-Thunk-Interface](https://github.com/RadeonOpenCompute/ROCT-Thunk-Interface/tree/roc-1.1.0)\r\n* [HCC compiler](https://github.com/RadeonOpenCompute/hcc/tree/roc-1.1.0)\r\n* [LLVM-AMDGPU-Assembler-Extra](https://github.com/RadeonOpenCompute/LLVM-AMDGPU-Assembler-Extra/tree/roc-1.1.0)\r\n* [ROC-smi](https://github.com/RadeonOpenCompute/ROC-smi/tree/roc-1.1.0)\r\n* [ROCnRDMA](https://github.com/RadeonOpenCompute/ROCnRDMA/tree/roc-1.1.0)\r\n* [HIP](https://github.com/GPUOpen-ProfessionalCompute-Tools/HIP/tree/roc-1.1.0)\r\n* [HIP-Examples](https://github.com/GPUOpen-ProfessionalCompute-Tools/HIP-Examples/tree/roc-1.1.0)\r\n\r\nIn addition the following mirror repositories that support the HCC compiler are\r\nalso available on GitHub, and frozen for the roc-1.1.0 release:\r\n\r\n* [llvm](https://github.com/RadeonOpenCompute/llvm/tree/roc-1.1.0)\r\n* [clang](https://github.com/RadeonOpenCompute/clang/tree/roc-1.1.0)\r\n\r\n### Installing from AMD ROCm Repositories\r\nAMD is hosting both debian and rpm repositories for the ROCm 1.1 packages. The\r\npackages in both repositories have been signed to ensure package integrity.\r\nDirections for each repository are given below:\r\n\r\n#### Supported Operating Systems\r\n\r\nThe ROCm platform has been tested on the following operating systems:\r\n * Ubuntu 14.04.04\r\n * Fedora 23\r\n\r\nThere is experimental support for the following operating systems:\r\n * Ubuntu 16.04\r\n * Fedora 22\r\n\r\n#### Debian repository - apt-get\r\n\r\n##### Add the ROCm apt repository\r\nFor Debian based systems, like Ubuntu, configure the Debian ROCm repository as\r\nfollows:\r\n\r\n```shell\r\nwget -qO - http://packages.amd.com/rocm/apt/debian/rocm.gpg.key | sudo apt-key add -\r\nsudo sh -c 'echo deb [arch=amd64] http://packages.amd.com/rocm/apt/debian/ trusty main > /etc/apt/sources.list.d/rocm.list'\r\n```\r\n\r\n##### Install or Update\r\nNext, update the apt-get repository list and install/update the rocm package:\r\n\r\n>**Warning**: Before proceeding, make sure to completely\r\n>[uninstall any pre-release ROCm packages](https://github.com/RadeonOpenCompute/ROCm#removing-pre-release-packages):\r\n\r\n```shell\r\nsudo apt-get update\r\nsudo apt-get install rocm\r\n```\r\nThen, make the ROCm kernel your default kernel. If using grub2 as your\r\nbootloader, you can edit the `GRUB_DEFAULT` variable in the following file:\r\n\r\n```shell\r\nsudo vi /etc/default/grub\r\nsudo update-grub\r\n```\r\n\r\nOnce complete, reboot your system.\r\n\r\nWe recommend you [verify your installation](https://github.com/RadeonOpenCompute/ROCm#verify-installation) to make sure everything completed successfully.\r\n\r\n##### Un-install\r\nTo un-install the entire rocm-dev development package execute:\r\n\r\n```shell\r\nsudo apt-get autoremove rocm\r\n```\r\n\r\n##### Installing development packages for cross compilation\r\nIt is often useful to develop and test on different systems. In this scenario,\r\nyou may prefer to avoid installing the ROCm Kernel to your development system.\r\n\r\nIn this case, install the development subset of packages:\r\n\r\n```shell\r\nsudo apt-get update\r\nsudo apt-get install rocm-dev\r\n```\r\n\r\n>**Note:** To execute ROCm enabled apps you will require a system with the full\r\n>ROCm driver stack installed\r\n\r\n##### Removing pre-release packages\r\nIf you installed any of the ROCm pre-release packages from github, they will\r\nneed to be manually un-installed:\r\n\r\n```shell\r\nsudo apt-get purge libhsakmt\r\nsudo apt-get purge radeon-firmware\r\nsudo apt-get purge $(dpkg -l | grep 'kfd\\|rocm' | grep linux | grep -v libc | awk '{print $2}')\r\n```\r\n\r\nIf possible, we would recommend starting with a fresh OS install.\r\n\r\n#### RPM repository - dnf (yum)\r\n\r\nA dnf (yum) repostiory is also available for installation of rpm packages. To configure a\r\nsystem to use the ROCm rpm directory create the file /etc/yum.repos.d/rocm.repo with\r\nthe following contents:\r\n\r\n```shell\r\n[remote]\r\n\r\nname=ROCm Repo\r\n\r\nbaseurl=http://packages.amd.com/rocm/yum/rpm/\r\n\r\nenabled=1\r\n\r\ngpgcheck=0\r\n```\r\nExecute the following commands:\r\n\r\n```shell\r\nsudo dnf clean all\r\nsudo dnf install rocm\r\n```\r\n\r\nAs with the debian packages, it is possible to install rocm-dev or rocm-kernel individually.\r\nTo uninstall the packages execute:\r\n\r\n```shell\r\nsudo dnf remove rocm\r\n```\r\n\r\n#### Verify Installation\r\n\r\nTo verify that the ROCm stack completed successfully you can execute to HSA\r\nvectory\\_copy sample application:\r\n\r\n```shell\r\ncd /opt/rocm/hsa/sample\r\nmake\r\n./vector_copy\r\n```\r\n\r\n#### Closed Source Components\r\nThe ROCm platform relies on a few closed source components to provide legacy\r\nfunctionality like HSAIL finalization and debugging/profiling support. These\r\ncomponents are only available through the ROCm repositories, and will either be\r\ndeprecated or become open source components in the future. These components are\r\nmade available in the following packages:\r\n\r\n*  hsa-ext-rocr-dev\r\n\r\n### Getting ROCm Source Code\r\nModifications can be made to the ROCm 1.1 components by modifying the open\r\nsource code base and rebuilding the components. Source code can be cloned from\r\neach of the GitHub repositories using git, or users can use the repo command\r\nand the ROCm 1.1 manifest file to download the entire ROCm 1.1 source code.\r\n\r\n#### Installing repo\r\nGoogle's repo tool allows you to manage multiple git repositories\r\nsimultaneously. You can install it by executing the following commands:\r\n\r\n```shell\r\ncurl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo\r\nchmod a+x ~/bin/repo\r\n```\r\nNote: make sure ~/bin exists and it is part of your PATH\r\n\r\n#### Cloning the code\r\n```shell\r\nmkdir ROCm && cd ROCm\r\nrepo init -u https://github.com/RadeonOpenCompute/ROCm.git -b roc-1.1.0\r\nrepo sync\r\n```\r\n\r\nThese series of commands will pull all of the open source code associated with\r\nthe ROCm 1.1 release.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}